apply plugin: 'com.android.application'

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            jniLibs.srcDirs = ['libs']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        androidTest.setRoot('tests')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':lib')
    compile 'com.android.support:support-v4:19.+'
}

//def makeJar(String target,String classDir){
//    exec{
//        executable "jar"
//        args "cvf",target
//        args "-C", classDir
//        args "","."
//    }
//}
//
//task buildLib(dependsOn:'compileReleaseJava') {
//    def srcDir = "build/intermediates/classes/release"
//    def destFile = "build/main-host.jar"
//    inputs.dir srcDir
//    outputs.file destFile
//    doLast {
//        makeJar(destFile, srcDir)
//    }
//}

task makeOnlyJar(type: org.gradle.api.tasks.bundling.Jar) {
    //指定生成的jar名
    def outJarName = "main-host"
    baseName outJarName
    //从哪里打包class文件
    from('build/intermediates/classes/release')
    //打包到jar后的目录结构
    into('')
    //去掉不需要打包的目录和文件
    exclude('test/', 'BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    exclude { it.name.startsWith('R$'); }
}
makeOnlyJar.dependsOn(build)